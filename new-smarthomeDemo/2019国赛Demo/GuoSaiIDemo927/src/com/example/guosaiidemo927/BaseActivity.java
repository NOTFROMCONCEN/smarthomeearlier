package com.example.guosaiidemo927;

import java.text.DecimalFormat;
import java.util.Random;

import com.bizideal.smarthome.socket.ConstantUtil;
import com.bizideal.smarthome.socket.DataCallback;
import com.bizideal.smarthome.socket.DeviceBean;
import com.bizideal.smarthome.socket.SocketClient;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.Fragment;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

/*
 * @文件名：BaseActivity.java
 * @描述：数据采集
 * @作者：邢启瑞
 * @版权：Bilibili 奶油话梅糖
 * @时间：2019-9-27
 */
public class BaseActivity extends Fragment {
	private ImageView iv_temp;// 温度指针
	private ImageView iv_hum;// 湿度指针
	private TextView tv_temp;// 温度
	private TextView tv_hum;// 湿度
	private TextView tv_gas;// 燃气
	private TextView tv_press;// 气压
	private TextView tv_smo;// 烟雾
	private TextView tv_ill;// 光照
	private TextView tv_co;// Co2
	private TextView tv_pm;// PM2.5
	private TextView tv_per;// 人体红外
	private Random random = new Random();
	public static float temp, hum, gas, press, smo, ill, co, pm, per;// float

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		View view = inflater.inflate(R.layout.activity_base, container, false);
		initView(view);// 绑定控件
		// 数据采集
		SocketClient.getInstance().getData(new DataCallback<DeviceBean>() {

			@Override
			public void onResult(final DeviceBean getdata) {
				// TODO Auto-generated method stub
				if (!TextUtils.isEmpty(getdata.getTemperature())) {// 温度
					tv_temp.setText(getdata.getTemperature());
					temp = Float.valueOf(getdata.getTemperature());
				}
				if (!TextUtils.isEmpty(getdata.getHumidity())) {// 湿度
					tv_hum.setText(getdata.getHumidity());
					hum = Float.valueOf(getdata.getHumidity());
				}
				if (!TextUtils.isEmpty(getdata.getIllumination())) {// 光照
					tv_ill.setText(getdata.getIllumination());
					ill = Float.valueOf(getdata.getIllumination());
				}
				if (!TextUtils.isEmpty(getdata.getAirPressure())) {// 气压
					tv_press.setText(getdata.getAirPressure());
					press = Float.valueOf(getdata.getAirPressure());
				}
				if (!TextUtils.isEmpty(getdata.getSmoke())) {// 烟雾
					tv_smo.setText(getdata.getSmoke());
					smo = Float.valueOf(getdata.getSmoke());
				}
				if (!TextUtils.isEmpty(getdata.getGas())) {// 燃气
					tv_gas.setText(getdata.getGas());
					gas = Float.valueOf(getdata.getGas());
				}
				if (!TextUtils.isEmpty(getdata.getCo2())) {// Co2
					tv_co.setText(getdata.getCo2());
					co = Float.valueOf(getdata.getCo2());
				}
				if (!TextUtils.isEmpty(getdata.getPM25())) {// PM2.5
					tv_pm.setText(getdata.getPM25());
					pm = Float.valueOf(getdata.getPM25());
				}
				if (!TextUtils.isEmpty(getdata.getStateHumanInfrared())) {// 人体红外
					if (getdata.getStateHumanInfrared().toString()
							.equals(ConstantUtil.CLOSE)) {
						tv_per.setText("无人");
						per = 0;
					} else {
						tv_per.setText("有人");
						per = 1;
					}
				}
			}
		});
		// 激活进程
		handler.post(timeRunnable);
		return view;
	}

	/*
	 * @方法名：initView()
	 * 
	 * @功 能：绑定
	 * 
	 * @时 间：下午3:51:06
	 */
	private void initView(View view) {
		tv_co = (TextView) view.findViewById(R.id.tv_co);
		tv_gas = (TextView) view.findViewById(R.id.tv_gas);
		tv_hum = (TextView) view.findViewById(R.id.tv_hum);
		tv_ill = (TextView) view.findViewById(R.id.tv_ill);
		tv_per = (TextView) view.findViewById(R.id.tv_per);
		tv_pm = (TextView) view.findViewById(R.id.tv_pm);
		tv_press = (TextView) view.findViewById(R.id.tv_press);
		tv_smo = (TextView) view.findViewById(R.id.tv_smo);
		tv_temp = (TextView) view.findViewById(R.id.tv_temp);
		iv_hum = (ImageView) view.findViewById(R.id.iv_hum_zhizhen);
		iv_temp = (ImageView) view.findViewById(R.id.iv_temp_zhizhen);
	}

	/*
	 * @方法名：handler
	 * 
	 * @功 能：更新随机数
	 * 
	 * @时 间：下午3:51:44
	 */
	Handler handler = new Handler() {
		public void handleMessage(Message msg) {
			super.handleMessage(msg);
			temp = Float.valueOf(random.nextInt(40) % (40 - 20 + 1));// 温度
			hum = Float.valueOf(random.nextInt(40) % (120 - 10 + 1));// 湿度
			gas = Float.valueOf(random.nextInt(40) % (40 - 10 + 1));// 燃气
			smo = Float.valueOf(random.nextInt(40) % (40 - 10 + 1));// 烟雾
			ill = Float.valueOf(random.nextInt(9999) % (9999 - 500 + 1));// 光照
			co = Float.valueOf(random.nextInt(40) % (100 - 10 + 1));// Co2
			pm = Float.valueOf(random.nextInt(40) % (100 - 40 + 1));// pm2.5
			press = Float.valueOf(random.nextInt(1800) % (1800 - 10 + 1));// 气压
			DecimalFormat df = new DecimalFormat("0");
			String get_co = df.format(co);
			String get_gas = df.format(gas);
			String get_hum = df.format(hum);
			String get_ill = df.format(ill);
			String get_pm = df.format(pm);
			String get_press = df.format(press);
			String get_smo = df.format(smo);
			String get_temp = df.format(temp);
			tv_co.setText(String.valueOf(get_co));
			tv_gas.setText(String.valueOf(get_gas));
			tv_hum.setText(String.valueOf(get_hum));
			tv_ill.setText(String.valueOf(get_ill));
			tv_pm.setText(String.valueOf(get_pm));
			tv_press.setText(String.valueOf(get_press));
			tv_smo.setText(String.valueOf(get_smo));
			tv_temp.setText(String.valueOf(get_temp));
			if (Float.valueOf(random.nextInt(10) % (10 - 1 + 1)) > 5) {
				tv_per.setText("有人");
				per = 1;
			} else {
				tv_per.setText("无人");
				per = 0;
			}
			iv_hum.setRotation(hum);
			iv_temp.setRotation(temp);
			handler.postDelayed(timeRunnable, 3000);
		}
	};
	Runnable timeRunnable = new Runnable() {

		@Override
		public void run() {
			// TODO Auto-generated method stub
			Message msg = handler.obtainMessage();
			handler.sendMessage(msg);
		}
	};
}
